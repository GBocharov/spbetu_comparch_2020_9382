Microsoft (R) Macro Assembler Version 5.10                  11/4/20 15:20:26
                                                             Page     1-1


 0000				STACKSG SEGMENT  PARA STACK 'Stack'
 0000  0020[			         DW       32 DUP(?)
	   ????			
			 ]	
				
 0040				STACKSG	ENDS
				
 0000				DATASG  SEGMENT  PARA 'Data'		
						
 0000  FFFF			    a	    DW	-1h
 0002  0001			    b	    DW	1h
 0004  0001			    i	    DW	1h
 0006  FFFF			    k       DW  -1h
 0008  0001			    i1      DW  1h
 000A  0001			    i2      DW  1h
 000C  0001			    res     DW  1h
 000E				DATASG	ENDS				
								
				
 0000				CODE      SEGMENT   			
							
				ASSUME  DS:DATASG, CS:CODE
				 	
 0000				Main    PROC  FAR
 0000  B8 ---- R		    	mov  ax, DATASG
 0003  8E D8			    	mov  ds, ax
				    
 0005				f1:
 0005  A1 0000 R		    mov ax, a          ; –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è a
				 –≤ ax
 0008  3B 06 0002 R		    cmp	ax, b	       ; —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –
				ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ a –∏ b —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤
				–µ–Ω–Ω–æ
 000C  7E 13			    jle f1_jle         ; a <= b
				
				                       ; –µ—Å–ª–∏ –ø–æ–ø–∞–ª–∏ 
				—Å—é–¥–∞, —Ç–æ a > b 
 000E  A1 0004 R		    mov ax, i          ; –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è i
				 –≤ ax 
 0011  05 0001			    add ax, 1          ; –¥–æ–±–∞–≤–∏–º –∫ i 1 
				-> (i+1)
 0014  D1 E0			    shl ax, 1          ; –¥–æ–º–Ω–æ–∂–∞–µ–º ax 
				–Ω–∞ 2 -> 2(i+1)
 0016  BB 0004			    mov bx, 4          ; –ø–æ–ª–æ–∂–∏–ª–∏ –≤ bx
				 4
 0019  2B C3			    sub ax, bx         ; ax - bx =  2(i+1) - 4
 001B  A3 0008 R		    mov i1, ax         ; –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –
				≤ i1 —Ä–µ–∑—É–ª—å—Ç–∞—Ç 2(i+1) - 4
 001E  EB 19 90			    jmp f2             ; –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ 
				f2
				
 0021				f1_jle:                ; a <= b
 0021  A1 0004 R		    mov ax, i          ; –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è i
				 –≤ ax
Microsoft (R) Macro Assembler Version 5.10                  11/4/20 15:20:26
                                                             Page     1-2


 0024  05 0001			    add ax, 1	       ; –ø–æ–ª–æ–∂–∏–ª–∏ –≤ ax
				 (i+1)
 0027  8B D8			    mov bx, ax	       ; –ø–æ–ª–æ–∂–∏–ª–∏ –≤ bx
				 ax
 0029  D1 E0			    shl ax, 1          ; –¥–æ–º–Ω–æ–∂–∏–º ax –Ω
				–∞ 2 -> 2(i+1)
 002B  03 C3			    add ax, bx	       ; –ø—Ä–∏–±–∞–≤–∏–ª–∏ –∫ 
				ax bx -> 3(i+1)
 002D  BB 0005			    mov bx, 5          ; –ø–æ–ª–æ–∂–∏–ª–∏ 5 –≤ 
				bx
 0030  2B D8			    sub bx, ax         ; bx - ax = 5 - 3(i+1)
 0032  89 1E 0008 R		    mov i1, bx         ; –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –
				≤ i1 —Ä–µ–∑—É–ª—å—Ç–∞—Ç 5 - 3(i+1)
 0036  EB 01 90			    jmp f2
				
 0039				f2:
 0039  A1 0000 R		    mov ax, a          ; –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è a
				 –≤ ax
 003C  3B 06 0002 R		    cmp ax, b          ; —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –
				ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ a –∏ b
 0040  7E 1C			    jle f2_jle         ; a <= b
				
				                       ; –µ—Å–ª–∏ –ø–æ–ø–∞–ª–∏ 
				—Å—é–¥–∞, —Ç–æ a > b
				   
 0042  A1 0004 R		    mov ax, i          ; –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è i
				 –≤ ax
 0045  8B D8			    mov bx, ax         ; –∫–ª–∞–¥–µ–º –≤ bx i
 0047  D1 E0			    shl ax, 1          ; 2i
 0049  03 C3			    add ax, bx         ; 3i
 004B  D1 E0			    shl ax, 1          ; 6i
 004D  BB 0008			    mov bx, 8          ; –∫–ª–∞–¥–µ–º 8 –≤ bx
 0050  03 C3			    add ax, bx         ; 6i+8
 0052  BB 0000			    mov bx, 0          ; bx = 0
 0055  2B D8			    sub bx, ax         ; –¥–µ–ª–∞–µ–º –∞—Ö –æ—Ç
				—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º
 0057  89 1E 000A R		    mov i2, bx         ; –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –
				≤ i2 —Ä–µ–∑—É–ª—å—Ç–∞—Ç -(6 * i + 8)
 005B  EB 19 90			    jmp f3             ; –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ 
				f3
				
				
 005E				f2_jle:
 005E  A1 0004 R		    mov ax, i          ; –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è i
				 –≤ ax
 0061  2D 0001			    sub ax, 1          ; –æ—Ç–Ω—è–ª–∏ –æ—Ç i 1
 0064  8B D8			    mov bx, ax         ; –ø–æ–ª–æ–∂–∏–ª–∏ –≤ bx
				 ax
 0066  D1 E0			    shl ax, 1          ; 2(i-1)
 0068  03 C3			    add ax, bx         ; 3(i-1)
 006A  BB 0009			    mov bx, 9          ; bx = 9
 006D  2B D8			    sub bx, ax         ; 9 -3*(i-1)
 006F  89 1E 000A R		    mov i2, bx         ; –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –
				≤ i2 —Ä–µ–∑—É–ª—å—Ç–∞—Ç 9 -3*(i-1)
Microsoft (R) Macro Assembler Version 5.10                  11/4/20 15:20:26
                                                             Page     1-3


 0073  EB 01 90			    jmp f3
				
 0076				f3:
 0076  A1 0006 R		    mov ax, k          ; –∫–ª–∞–¥–µ–º –≤ ax –ø–
				µ—Ä–µ–º–µ–Ω–Ω—É—é k
 0079  3D 0000			    cmp ax, 0          ; —Å—Ä–∞–≤–Ω–∏–º k —Å 0
 007C  74 14			    je f3_je           ; k = 0
				
				                       ; —á–∞—Å—Ç—å, –≥–¥–µ k /
				= 0 
 007E  A1 0008 R		    mov ax, i1         ; –∫–ª–∞–¥–µ–º –≤ ax –ø–
				µ—Ä–µ–º–µ–Ω–Ω—É—é i1
 0081  8B 1E 000A R		    mov bx, i2         ; –∫–ª–∞–¥–µ–º –≤ bx –ø–
				µ—Ä–µ–º–µ–Ω–Ω—É—é i2
 0085  3B C3			    cmp ax, bx         ; —Å—Ä–∞–≤–Ω–∏–º i1 c i2
				 
 0087  7E 03			    jle f3_jle         ; –µ—Å–ª–∏ i1 <= i2
 0089  EB 1B 90			    jmp f3_jl_result_jge
				
				
 008C				f3_jle:
 008C  A1 000A R		    mov ax, i2         ; –∫–ª–∞–¥–µ–º –≤ ax –ø–
				µ—Ä–µ–º–µ–Ω–Ω—É—é i2
 008F  EB 15 90			    jmp f3_jl_result_jge
				
				
 0092				f3_je:
 0092  A1 0008 R		    mov ax, i1         ; –∫–ª–∞–¥–µ–º –≤ ax –ø–
				µ—Ä–µ–º–µ–Ω–Ω—É—é i1
 0095  8B 1E 000A R		    mov bx, i2         ; –∫–ª–∞–¥–µ–º –≤ ax –ø–
				µ—Ä–µ–º–µ–Ω–Ω—É—é i1
 0099  3B C3			    cmp ax, bx         ; —Å—Ä–∞–≤–Ω–∏–º i1 c i2
				 
 009B  7D 03			    jge f3_jge         ; –µ—Å–ª–∏ i1 >= i2 
 009D  EB 07 90			    jmp f3_jl_result_jge
				
				
 00A0				f3_jge:
 00A0  A1 000A R		    mov ax, i2         ; –∫–ª–∞–¥–µ–º –≤ ax –ø–
				µ—Ä–µ–º–µ–Ω–Ω—É—é i2
 00A3  EB 01 90			    jmp f3_jl_result_jge
				
 00A6				f3_jl_result_jge:
 00A6  A3 000C R		    mov res, ax        ; –º–∞–∫—Å–∏–º—É–º –∏–ª–
				∏ –º–∏–Ω–∏–º—É–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç
				 —É—Å–ª–æ–≤–∏—è
 00A9  EB 01 90			    jmp end_f          ; –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—
				Ä–æ–≥—Ä–∞–º–º—É
				
				
 00AC				end_f:
 00AC  B4 4C			    mov ah, 4ch        ; –∏ –Ω–∞–∫–æ–Ω–µ—Ü –∑–∞
				–≤–µ—Ä—à–∏–º –ø—Ä–æ–≥—Ä–∞–º–º—É
 00AE  CD 21			    int 21h
Microsoft (R) Macro Assembler Version 5.10                  11/4/20 15:20:26
                                                             Page     1-4


				
				
 00B0				Main      ENDP
 00B0				CODE      ENDS
				END Main				
Microsoft (R) Macro Assembler Version 5.10                  11/4/20 15:20:26
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	00B0	PARA	NONE	
DATASG . . . . . . . . . . . . .  	000E	PARA	NONE	'DATA'
STACKSG  . . . . . . . . . . . .  	0040	PARA	STACK	'STACK'

Symbols:            

                N a m e         	Type	 Value	 Attr

A  . . . . . . . . . . . . . . .  	L WORD	0000	DATASG

B  . . . . . . . . . . . . . . .  	L WORD	0002	DATASG

END_F  . . . . . . . . . . . . .  	L NEAR	00AC	CODE

F1 . . . . . . . . . . . . . . .  	L NEAR	0005	CODE
F1_JLE . . . . . . . . . . . . .  	L NEAR	0021	CODE
F2 . . . . . . . . . . . . . . .  	L NEAR	0039	CODE
F2_JLE . . . . . . . . . . . . .  	L NEAR	005E	CODE
F3 . . . . . . . . . . . . . . .  	L NEAR	0076	CODE
F3_JE  . . . . . . . . . . . . .  	L NEAR	0092	CODE
F3_JGE . . . . . . . . . . . . .  	L NEAR	00A0	CODE
F3_JLE . . . . . . . . . . . . .  	L NEAR	008C	CODE
F3_JL_RESULT_JGE . . . . . . . .  	L NEAR	00A6	CODE

I  . . . . . . . . . . . . . . .  	L WORD	0004	DATASG
I1 . . . . . . . . . . . . . . .  	L WORD	0008	DATASG
I2 . . . . . . . . . . . . . . .  	L WORD	000A	DATASG

K  . . . . . . . . . . . . . . .  	L WORD	0006	DATASG

MAIN . . . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 00B0

RES  . . . . . . . . . . . . . .  	L WORD	000C	DATASG

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  VBN		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    120 Source  Lines
    120 Total   Lines
     28 Symbols

  48012 + 453103 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
