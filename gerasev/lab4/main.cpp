#include <iostream>
#include <fstream>

int main()
{
    std::cout<<"Вид преобразования: 4. Преобразование всех заглавных латинских букв входной строки в\n";
    std::cout<<"строчные, а восьмеричных цифр в инверсные, остальные символы входной строки\n";
    std::cout<<"передаются в выходную строку непосредственно.\n";
    std::cout<<"Работу выполнил: студент группы 9382 Герасев Георгий\n";

    char* str1 = new char[80];
    char* str2 = new char[80];
    std::cout<<"Введите строку: ";

    std::cin.getline(str1,80);
    asm("mov  %0,%%rsi\n\t"     //положили в al 0
        "mov  %1,%%rdi\n\t"     
        "mov $80,%%ecx\n\t"     //положили длину строки в ecx

        "get_symbol:"
        "lodsb (%%rsi)\n\t"     //загружаем символ в al
        "cmpb $0x30,%%al\n\t"   //сравниваем символ с кодом цифры 0 
        "jl character_case\n\t"      //если меньше, то не цифра, идем дальше к проверке на буквы
        "cmpb $0x37,%%al\n\t"   //сравниваем символ с кодом цифры 7
        "jg character_case\n\t"      //если больше то не цифра в 8 сс идем к проверке на буквы

        "number_case:"
        "sub $0x30,%%al\n\t"    //вычитаем 30 чтобы получить цифру
        "xor $0x7,%%al\n\t"     //инвертируем последние 3 бита
        "add $0x30,%%al\n\t"    //прибавляем 30 чтобы получить код цифры
        "jmp add_to_result\n\t"         //переходим к выводу в выходную строку

        "character_case:"
        "cmpb $0x41,%%al\n\t "  //сравниваем с символом "A"
        "jl add_to_result\n\t"          //если меньше, переходим к выводу в выходную строку
        "cmpb $0x5a,%%al\n\t"   //сравниваем с символом "Z"
        "jg add_to_result\n\t"          //если больше, то преходим к выводу в выходную строку
        "add $0x20,%%al\n\t"    //получаем строчную букву

        "add_to_result:"
        "stosb (%%rdi)\n\t"     //записываем символ в выходную строку
        "loop get_symbol\n\t"    //возвращаемся в начало пока ecx!=0
        ::"m"(str1),"m"(str2)
    );


    std::cout<<"Преобразованная строка:\t"<<str2<<'\n';
    std::ofstream fileOut("Result.txt");
    if(fileOut.is_open())
    {
        fileOut<<str2;
        fileOut.close();
    }

    return 0;
}
